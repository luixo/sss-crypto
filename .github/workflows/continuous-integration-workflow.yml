name: CI
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-env
      - name: Run code formatting verification
        run: yarn format:verify

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-env
      - name: Run typecheck
        run: yarn typecheck

  linter:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-env
      - name: Run linter
        run: yarn lint

  test:
    name: Tests
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage-percent.outputs.coverage }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-env
      - name: Run tests
        run: yarn test
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage
      - name: Report coverage
        uses: davelosert/vitest-coverage-report-action@v2
      - name: Pass coverage percent to output
        id: coverage-percent
        run: |
          COVERAGE=$(node -e 'console.log(Object.entries(require("./coverage/coverage-summary.json").total).reduce((acc, [, m]) => Math.min(acc, m.pct), 100))')
          echo "Coverage is $COVERAGE"
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

  update-badge:
    name: Badge
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Coverage badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        env:
          branch: ${{ github.ref == 'refs/heads/main' && 'main' || github.event.pull_request.number }}
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 4670c3917f47c8610e4defce63f07b55
          filename: coverage_${{ env.branch }}.json
          label: Coverage
          message: ${{ needs.test.outputs.coverage }}%
          valColorRange: ${{ needs.test.outputs.coverage }}
          minColorRange: 50
          maxColorRange: 100
